class Solution {
public:
    void addEdge(int v, int u, vector<int> adj[]){
        adj[u].push_back(v);
    }
    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {
        vector<int> ans;
        vector<int> adj[numCourses];
        for(int i=0;i<prerequisites.size();i++){
            addEdge(prerequisites[i][0], prerequisites[i][1], adj);
        }

        vector<int> inDegrees(numCourses, 0);
        for(int u=0;u<numCourses;u++){
            for(int v:adj[u]){
                inDegrees[v]++;
            }
        }

        queue<int> q;
        for(int i=0;i<inDegrees.size();i++){
            if(inDegrees[i]==0){
                q.push(i);
            }
        }

        while(!q.empty()){
            int u = q.front();
            q.pop();
            ans.push_back(u);
            for(int v:adj[u]){
                inDegrees[v]--;
                if(inDegrees[v]==0){
                    q.push(v);
                }
            }
        }

        return ans.size() == numCourses;
    }
};
