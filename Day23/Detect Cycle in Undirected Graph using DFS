class Solution {
public:
    void addEdge(int v, int u, vector<int> adj[]){
        adj[u].push_back(v);
    }
    bool isCycle(vector<bool> &visited, vector<bool> &rec, vector<int> adj[], int u){
        visited[u] = true;
        rec[u] = true;

        for(int v:adj[u]){
            if(!visited[v]){
                if(isCycle(visited, rec, adj, v)){
                    return true;
                }
            }else if(rec[v] == true){
                return true;
            }
        }
        rec[u] = false;
        return false;
    }
    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {
        vector<int> adj[numCourses];
        for(auto edge:prerequisites){
            addEdge(edge[0], edge[1], adj);
        }
        vector<bool> visited(numCourses, false);
        vector<bool> rec(numCourses, false);

        for(int u=0;u<numCourses;u++){
            if(!visited[u]){
                if(isCycle(visited, rec, adj, u)){
                    return false;
                }
            }
        }
        return true;
    }
};
