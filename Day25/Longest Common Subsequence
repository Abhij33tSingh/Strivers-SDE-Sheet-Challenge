class Solution {
public:
    vector<vector<int>> dp;
    int fn(string &s1, string &s2, int i, int j){
        if(i==0 || j==0){
            return 0;
        }
        if(dp[i][j] != -1){
            return dp[i][j];
        }
        if(s1[i-1]==s2[j-1]){
            return dp[i][j] = 1+fn(s1, s2, i-1, j-1);
        }
        return dp[i][j] = max(fn(s1, s2, i-1, j), fn(s1, s2, i, j-1));
    }
    int longestCommonSubsequence(string text1, string text2) {
        dp.resize(text1.size()+1, vector<int>(text2.size()+1, -1));
        return fn(text1, text2, text1.size(), text2.size());
    }
};
