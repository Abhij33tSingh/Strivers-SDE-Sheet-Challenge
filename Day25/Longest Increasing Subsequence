class Solution {
public:
    vector<vector<int>> dp;
    int fn(vector<int> &nums, int i, int prevMaxIndex){
        if(i==nums.size()){
            return 0;
        }
        if(dp[i][prevMaxIndex+1] != -1){
            return dp[i][prevMaxIndex+1];
        }
        if(prevMaxIndex==-1 || nums[i] > nums[prevMaxIndex]){
            return dp[i][prevMaxIndex+1] = max(1+fn(nums, i+1, i), fn(nums, i+1, prevMaxIndex));
        }
        return dp[i][prevMaxIndex+1] = fn(nums, i+1, prevMaxIndex);
    }
    int lengthOfLIS(vector<int>& nums) {
        dp.resize(nums.size(), vector<int>(nums.size()+2, -1));
        return fn(nums, 0, -1);
    }
};
