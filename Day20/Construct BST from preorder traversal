/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* fn(vector<int> &preorder, int start, int end){
        if(end < start){
            return NULL;
        }
        TreeNode *ptr = new TreeNode(preorder[start]);
        int s = start;
        while(s <= end && preorder[s] <= preorder[start]){
            s++;
        }
        ptr -> left = fn(preorder, start+1, s-1);
        ptr -> right = fn(preorder, s, end);
        return ptr;
    }
    TreeNode* bstFromPreorder(vector<int>& preorder) {
        return fn(preorder, 0, preorder.size()-1);
    }
};
