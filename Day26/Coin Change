class Solution {
public:
    vector<vector<int>> dp;
    int fn(vector<int> &coins, int amount, int n){
        if(n==0){
            if(amount==0){
                return 0;
            }
            return INT_MAX/2;
        }
        if(amount==0){
            return 0;
        }
        if(dp[amount][n] != -1){
            return dp[amount][n];
        }
        if(coins[n-1] <= amount){
            return dp[amount][n] = min(1 + fn(coins, amount-coins[n-1], n), fn(coins, amount, n-1));
        }
        return dp[amount][n] = fn(coins, amount, n-1);
    }
    int coinChange(vector<int>& coins, int amount) {
        int n = 1e4+1;
        int m = 13;
        dp.resize(n, vector<int>(m, -1));

        int ans = fn(coins, amount, coins.size());  
        
        if(ans >= INT_MAX/2){
            return -1;
        } 
        return ans;
    }
};
