class Solution {
public:
    vector<vector<int>> dp;
    int fn(vector<int> &cuts, int i, int j){
        if(i>j){
            return 0;
        }
        if(dp[i][j] != -1){
            return dp[i][j];
        }
        int ans = INT_MAX;
        for(int k=i;k<=j;k++){
            int cost = cuts[j+1] - cuts[i-1] + 
                        fn(cuts, i, k-1) + fn(cuts, k+1, j);
            ans = min(ans, cost);
        }
        return dp[i][j] = ans;
    }
    int minCost(int n, vector<int>& cuts) {
        cuts.insert(cuts.begin(), 0);
        cuts.push_back(n);
        sort(cuts.begin(), cuts.end());
        dp.resize(cuts.size(), vector<int>(cuts.size(), -1));
        return fn(cuts, 1, cuts.size()-2);
    }
};
