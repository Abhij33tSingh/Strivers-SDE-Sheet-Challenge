class Solution
{
    public:
    //Function to find minimum number of attempts needed in 
    //order to find the critical floor.
    vector<vector<int>> dp;
    int fn(int e ,int f){
        if(f==0 || f==1){
            return f;
        }
        if(e==1){
            return f;
        }
        if(dp[e][f] != -1){
            return dp[e][f];
        }
        int ans = INT_MAX;
        for(int k=1;k<=f;k++){
            int temp = 1 + max(fn(e-1, k-1), fn(e, f-k));
            ans = min(temp, ans);
        }
        return dp[e][f] = ans;
    }
    int eggDrop(int n, int k) 
    {
        dp.resize(n+1, vector<int>(k+1, -1));
        return fn(n, k);
    }
};
