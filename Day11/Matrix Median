int findElementsLessThanOrEqualTo(vector<int> &arr, int ele){
    int low = 0, high = arr.size()-1;
    while(low <= high){
        int mid = (low + high) / 2;
        if(arr[mid] <= ele){
            low = mid + 1;
        }else{
            high = mid - 1;
        }
    }
    return low;
}
int Solution::findMedian(vector<vector<int> > &A) {
    int low = 1, high = 1e9;
    while(low <= high){
        int mid = (low + high) / 2;
        int count = 0;
        for(int i=0;i<A.size();i++){
            count += findElementsLessThanOrEqualTo(A[i], mid);
        }
        if(count <= (A.size() * A[0].size()) / 2){
            low = mid+1;
        }else{
            high = mid-1;
        }
    }
    return low;
}
